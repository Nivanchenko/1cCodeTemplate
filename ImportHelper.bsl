
#Область Библиотека
	
Функция ПолучитьКеш(ТекстЗапроса, ПоляРезультата, ФильтрПоиска, Данные, МенеджерОбъекта, ЭтоДокумент = Ложь, ЗначенияПоУмолчанию = Неопределено, АлгоритмыПостОбработки = Неопределено)
	
	Если ЗначенияПоУмолчанию = Неопределено Тогда
		ЗначенияПоУмолчанию = Новый Структура;
	КонецЕсли;
	
	Результат = Новый Структура;
	Результат.Вставить("ТекстЗапроса", ТекстЗапроса);
	Результат.Вставить("ПоляРезультата", ПоляРезультата);
	Результат.Вставить("ФильтрПоиска", Новый Структура(ФильтрПоиска));
	Результат.Вставить("Данные", Новый Структура(Данные));
	Результат.Вставить("Менеджер", МенеджерОбъекта);
	Результат.Вставить("ЭтоДокумент", ЭтоДокумент);
	Результат.Вставить("ЗначенияПоУмолчанию", ЗначенияПоУмолчанию);
	Результат.Вставить("АлгоритмыПостОбработки", АлгоритмыПостОбработки);
	
	Запрос = Новый Запрос;
	Запрос.Текст = ТекстЗапроса;
	
	РезультатЗапроса = Запрос.Выполнить();
	
	Таблица = Новый ТаблицаЗначений;
	
	//Чтоб колонки были не типизированные
	Для Каждого КолонкаРезультата из РезультатЗапроса.Колонки цикл
		Таблица.Колонки.Добавить(КолонкаРезультата.Имя);	
	КонецЦикла;	
	
	Выборка = РезультатЗапроса.Выбрать();
	
	Пока Выборка.Следующий() цикл
		ЗаполнитьЗначенияСвойств(Таблица.Добавить(), Выборка);
	КонецЦикла;
	
	Если не Результат.АлгоритмыПостОбработки = Неопределено Тогда
		Для Каждого СтрокаКеша из Таблица Цикл 			
			Для Каждого КиЗ Из Результат.АлгоритмыПостОбработки Цикл
				
				Значение = СтрокаКеша[КиЗ.Ключ];
				Выполнить("Значение = " + КиЗ.Значение);
				СтрокаКеша[КиЗ.Ключ] = Значение;
						
			КонецЦикла;					
		КонецЦикла;
	КонецЕсли;
	
	Результат.Вставить("Таблица", Таблица);
	
	Возврат Результат;
	
КонецФункции

Функция НайтиВКеше(Кеш, Лог, СоздаватьНовый = Ложь, Перезаписывать = Ложь)
	Результат = Новый Структура(Кеш.ПоляРезультата);
	Результат.Вставить("СозданныйОбъект");
	
	ЗаполнитьЗначенияСвойств(Кеш.ФильтрПоиска, Кеш.Данные);
	
	ДанныеФильтра = Новый Структура;
	
	Для Каждого КИЗ из Кеш.ФильтрПоиска Цикл 
		Если ЗначениеЗаполнено(КИЗ.Значение) Тогда
			ДанныеФильтра.Вставить(КИЗ.Ключ, КИЗ.Значение);
		КонецЕсли;
	КонецЦикла;
	
	Если ДанныеФильтра.Количество() > 0 Тогда
		РезультатПоиска = Кеш.Таблица.НайтиСтроки(ДанныеФильтра);	
		Если РезультатПоиска.Количество() > 0 Тогда
			
			Если Перезаписывать = Истина Тогда
				СтрокаКеша = РезультатПоиска[0];
				НовыйОбъект = СтрокаКеша.Ссылка.ПолучитьОбъект();
				ЗаполнитьЗначенияСвойств(НовыйОбъект, Кеш.ЗначенияПоУмолчанию);
				ЗаполнитьЗначенияСвойств(НовыйОбъект, Кеш.Данные);
				НовыйОбъект.Записать();
				Результат.СозданныйОбъект = НовыйОбъект;
				ЗаполнитьЗначенияСвойств(СтрокаКеша, Кеш.Данные);
				Если не Кеш.АлгоритмыПостОбработки = Неопределено Тогда
					Для Каждого КиЗ Из Кеш.АлгоритмыПостОбработки Цикл
						
						Значение = СтрокаКеша[КиЗ.Ключ];
						Выполнить("Значение = " + КиЗ.Значение);
						СтрокаКеша[КиЗ.Ключ] = Значение;
						
					КонецЦикла;					
				КонецЕсли;
				ДополнитьЛог(Лог, СтрШаблон("Обновление %1: %2", Строка(Кеш.Менеджер), НовыйОбъект.Ссылка));
			КонецЕсли;
			
			
			
			ЗаполнитьЗначенияСвойств(Результат, РезультатПоиска[0]);
		Иначе 
			Если СоздаватьНовый Тогда
				Если Кеш.ЭтоДокумент Тогда
					НовыйОбъект = Кеш.Менеджер.СоздатьДокумент();
				Иначе
					НовыйОбъект = Кеш.Менеджер.СоздатьЭлемент();	
				КонецЕсли;
				ЗаполнитьЗначенияСвойств(НовыйОбъект, Кеш.ЗначенияПоУмолчанию);
				ЗаполнитьЗначенияСвойств(НовыйОбъект, Кеш.Данные);
				НовыйОбъект.Записать();
				Результат.СозданныйОбъект = НовыйОбъект;
				СтрокаКеша = Кеш.Таблица.Добавить();
				ЗаполнитьЗначенияСвойств(СтрокаКеша, Кеш.Данные);
				ЗаполнитьЗначенияСвойств(СтрокаКеша, Новый Структура("Ссылка", НовыйОбъект.Ссылка));
				Если не Кеш.АлгоритмыПостОбработки = Неопределено Тогда
					Для Каждого КиЗ Из Кеш.АлгоритмыПостОбработки Цикл
						
						Значение = СтрокаКеша[КиЗ.Ключ];
						Выполнить("Значение = " + КиЗ.Значение);
						СтрокаКеша[КиЗ.Ключ] = Значение;
						
					КонецЦикла;					
				КонецЕсли;
				ЗаполнитьЗначенияСвойств(Результат, СтрокаКеша);
				ДополнитьЛог(Лог, СтрШаблон("Создание %1: %2", Строка(Кеш.Менеджер), НовыйОбъект.Ссылка));
			КонецЕсли;			
		КонецЕсли;
	КонецЕсли;
	
	Для Каждого КИЗ из Кеш.ФильтрПоиска Цикл
		Кеш.ФильтрПоиска.Вставить(КИЗ.Ключ, Неопределено);
	КонецЦикла;
	
	Для Каждого КИЗ из Кеш.Данные Цикл
		Кеш.Данные.Вставить(КИЗ.Ключ, Неопределено);
	КонецЦикла;
	
	Возврат Результат;
	
КонецФункции

#КонецОбласти

#Область Вспомогательные

Функция ПолучитьДату(ТекстДаты, Лог)
	Попытка
		Возврат Дата(ТекстДаты+" 00:00:00");
	Исключение
		ДополнитьЛог(Лог, СтрШаблон("Не удалось преобразовать дату %1: %2", ТекстДаты, ОписаниеОшибки()));
		Возврат НачалоГода(ТекущаяДата());
	КонецПопытки;	
КонецФункции

Функция ПолучитьЧисло(ТекстЧисла, Лог)
	Попытка
		Возврат Число(ТекстЧисла);
	Исключение
		ДополнитьЛог(Лог, СтрШаблон("Не удалось преобразовать в число %1 : %2", ТекстЧисла, ОписаниеОшибки())); 
		Возврат 0;
	КонецПопытки;
КонецФункции

Функция ДополнитьДоДлины(Знач ДополняемаяСтрока, СимволДополнения, Длина)
	
	Если СтрДлина(ДополняемаяСтрока) < Длина Тогда 
		
		Пока СтрДлина(ДополняемаяСтрока) < Длина Цикл
			ДополняемаяСтрока = ДополняемаяСтрока + СимволДополнения;
		КонецЦикла;
		
	КонецЕсли;
	
	Возврат ДополняемаяСтрока;
	
КонецФункции

Процедура ДополнитьЛог(Лог, Дополнение)
	
	Лог = Лог + СтрШаблон("%1: %2%3",ТекущаяДата(), Дополнение, Символы.ПС);
	
КонецПроцедуры
	
#КонецОбласти
